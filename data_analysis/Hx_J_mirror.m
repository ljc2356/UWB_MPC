function Hx = Hx_J_mirror(m)
%% Multipath observation Jacobi matrix generation
% Enter the m tag parameter list
%m parameter list
% m(1,1) label x coordinate
% m(2,1) label y coordinate
% m(3,1) label x speed
% m(4,1) label y speed
% m(5,1) y-axis intercept of the reflecting surface
% m(6,1) The inclination angle of the reflecting surface relative to the x-axis

% Output Hx multipath observation Jacobian matrix

%Note Since the atan2 function used in the observation is not atan, the result of the derivative of the atan function is not suitable here. The Jacobian matrix used here is automatically generated by MATLAB.
%%
    x = m(1,1);
    y = m(2,1);
    h = m(5,1);
    theta = m(6,1);
    Hx(1,1) = (2*sin(2*theta)*abs(h + x*sin(2*theta) + cos(2*theta)*(h - y))*sign(h + x*sin(2*theta) + cos(2*theta)*(h - y)) + 2*abs(x*cos(2*theta) - sin(2*theta)*(h - y))*sign(x*cos(2*theta) - sin(2*theta)*(h - y))*cos(2*theta))/(2*(abs(h + x*sin(2*theta) + cos(2*theta)*(h - y))^2 + abs(x*cos(2*theta) - sin(2*theta)*(h - y))^2)^(1/2));
    Hx(1,2) = -(2*cos(2*theta)*abs(h + x*sin(2*theta) + cos(2*theta)*(h - y))*sign(h + x*sin(2*theta) + cos(2*theta)*(h - y)) - 2*abs(x*cos(2*theta) - sin(2*theta)*(h - y))*sign(x*cos(2*theta) - sin(2*theta)*(h - y))*sin(2*theta))/(2*(abs(h + x*sin(2*theta) + cos(2*theta)*(h - y))^2 + abs(x*cos(2*theta) - sin(2*theta)*(h - y))^2)^(1/2));
    Hx(1,5) = (2*abs(h + x*sin(2*theta) + cos(2*theta)*(h - y))*sign(h + x*sin(2*theta) + cos(2*theta)*(h - y))*(cos(2*theta) + 1) - 2*abs(x*cos(2*theta) - sin(2*theta)*(h - y))*sign(x*cos(2*theta) - sin(2*theta)*(h - y))*sin(2*theta))/(2*(abs(h + x*sin(2*theta) + cos(2*theta)*(h - y))^2 + abs(x*cos(2*theta) - sin(2*theta)*(h - y))^2)^(1/2));
    Hx(1,6) = (2*abs(h + x*sin(2*theta) + cos(2*theta)*(h - y))*sign(h + x*sin(2*theta) + cos(2*theta)*(h - y))*(2*x*cos(2*theta) - 2*sin(2*theta)*(h - y)) - 2*abs(x*cos(2*theta) - sin(2*theta)*(h - y))*sign(x*cos(2*theta) - sin(2*theta)*(h - y))*(2*x*sin(2*theta) + 2*cos(2*theta)*(h - y)))/(2*(abs(h + x*sin(2*theta) + cos(2*theta)*(h - y))^2 + abs(x*cos(2*theta) - sin(2*theta)*(h - y))^2)^(1/2));
    
    Hx(2,1) = -(((imag(cos(2*theta)) + real(sin(2*theta)))/(imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h)) + ((real(cos(2*theta)) - imag(sin(2*theta)))*(imag(x*cos(2*theta)) + real(x*sin(2*theta)) + real(cos(2*theta)*(h - y)) - imag(sin(2*theta)*(h - y)) + real(h)))/(- real(x*cos(2*theta)) + imag(x*sin(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2)*(imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2)/((imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2 + (imag(x*cos(2*theta)) + real(x*sin(2*theta)) + real(cos(2*theta)*(h - y)) - imag(sin(2*theta)*(h - y)) + real(h))^2);
    Hx(2,2) = (((real(cos(2*theta)) - imag(sin(2*theta)))/(imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h)) - ((imag(cos(2*theta)) + real(sin(2*theta)))*(imag(x*cos(2*theta)) + real(x*sin(2*theta)) + real(cos(2*theta)*(h - y)) - imag(sin(2*theta)*(h - y)) + real(h)))/(- real(x*cos(2*theta)) + imag(x*sin(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2)*(imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2)/((imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2 + (imag(x*cos(2*theta)) + real(x*sin(2*theta)) + real(cos(2*theta)*(h - y)) - imag(sin(2*theta)*(h - y)) + real(h))^2);
    Hx(2,5) = -(((real(cos(2*theta)) - imag(sin(2*theta)) + 1)/(imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h)) - ((imag(cos(2*theta)) + real(sin(2*theta)))*(imag(x*cos(2*theta)) + real(x*sin(2*theta)) + real(cos(2*theta)*(h - y)) - imag(sin(2*theta)*(h - y)) + real(h)))/(- real(x*cos(2*theta)) + imag(x*sin(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2)*(imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2)/((imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2 + (imag(x*cos(2*theta)) + real(x*sin(2*theta)) + real(cos(2*theta)*(h - y)) - imag(sin(2*theta)*(h - y)) + real(h))^2);
    Hx(2,6) = (((2*imag(x*sin(2*theta)) - 2*real(x*cos(2*theta)) + 2*imag(cos(2*theta)*(h - y)) + 2*real(sin(2*theta)*(h - y)))/(imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h)) + ((2*imag(x*cos(2*theta)) + 2*real(x*sin(2*theta)) + 2*real(cos(2*theta)*(h - y)) - 2*imag(sin(2*theta)*(h - y)))*(imag(x*cos(2*theta)) + real(x*sin(2*theta)) + real(cos(2*theta)*(h - y)) - imag(sin(2*theta)*(h - y)) + real(h)))/(- real(x*cos(2*theta)) + imag(x*sin(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2)*(imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2)/((imag(x*sin(2*theta)) - real(x*cos(2*theta)) + imag(cos(2*theta)*(h - y)) + real(sin(2*theta)*(h - y)) + imag(h))^2 + (imag(x*cos(2*theta)) + real(x*sin(2*theta)) + real(cos(2*theta)*(h - y)) - imag(sin(2*theta)*(h - y)) + real(h))^2);

    Hx(1,3) = 0;
    Hx(1,4) = 0;
    Hx(2,3) = 0;
    Hx(2,4) = 0;
    
end
