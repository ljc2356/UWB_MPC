clear all;clc;close all;
%% 测距测角核心脚本
% 读取相应的,json文件路径 并输出对应的首达径、多径在给定天线阵列下的测角测距结果
%% 读取数据

% 读取当前欲分析.json文件
folder = './ml_data/20210413_indoor/';
files_name = 'move_02.json';
filenames{1} = [folder,files_name];  %读取分析数据参数
records = loadRecordFile(filenames{1});

% 读取背景波形存储.json
Back_folder ='./ml_data/20210413_indoor/';   
Back_filenames = [Back_folder, 'cali_01.json'];  %读取模板生成参数

%开辟空间    
global result;
for antenna_num = 3:8 
    index = antenna_num - 2 ; %从3开始
    result(index,1).antenna_num = antenna_num;  
end
%% 参数设置
run("Properties.m");
%% 挑选有用数据
[useful_num,After_records]= UsefulSelect(records);
%% 生成模板
[ Template, Conv_Template ] = GenerateTemplate(Back_filenames);
%% 多径探测
mpc_index = [];

 for i = 1:useful_num
    mpc_index_tem = MPCDetect(After_records(i,1).uwbResult.cir,Template,Conv_Template);
    if (isempty(mpc_index_tem) == 0)
        mpc_index(i,1:length(mpc_index_tem)) = mpc_index_tem;  % 获得多径的位置
    end
    
  %加上一个变化速度判断
    if i >=2 
        if abs( mpc_index(i,1) - mpc_index(i-1,1)) > 3  % 如果变化太大 则视为无效 采用上一组数据的多径寻找结果
            mpc_index(i,1) = mpc_index(i-1,1);
        end
    end
 end
%% 首达径测距测角
data_index = 1:useful_num; %指定该列表控制具体对哪一部分数据进行分析
for i = data_index 
    i
    for antenna_num = 3:8
        index = antenna_num - 2 ;
        antenna_index = formation{antenna_num};
        ReadTime(After_records,index,i);
        
         [D_Phi,~ ] = los_analyse_form_Runtime(After_records(i,1),los_path,antenna_index);  %分析此数据的直达径
         result(index,1).los_d.data(i,1) = D_Phi(1);
         result(index,1).los_phi.data(i,1) = D_Phi(2);
         
         if (mpc_index(i,1) == 0) % 如果没有多径，则在多径的数据栏上增加标识: 多径的距离是 0 通过检测多径距离即可判断是否存在多径
             result(index,1).mpc_d.data(i,1) = 0;
             result(index,1).mpc_phi.data(i,1) = 0;
         else
             temp_mpc_index = mpc_index(i,find(mpc_index(i,:)));
             for mpc_th = 1:length(temp_mpc_index)  % 如果是空的，则不会填写
                 [D_Phi,sco_pp_mpc{antenna_num}(i,:)] = mpc_analyse_form_Runtime(After_records(i,1),mpc_index(i,mpc_th),los_path,antenna_index);
                 result(index,1).mpc_d.data(i,mpc_th) = D_Phi(1);
                 result(index,1).mpc_phi.data(i,mpc_th) = D_Phi(2);
             end
         end
    end
end

%% 对角度进行离线滤波


% EKF_angle();
% Flat_angle()

data_folder = './data/20210413_indoor/';
data_name = [data_folder,files_name(1:end - 5),'.mat'];
save(data_name,"result");

